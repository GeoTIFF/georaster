{"version":3,"file":"georaster.mjs","sources":["../../src/utils.js","../../src/parseData.js","../../src/index.js"],"sourcesContent":["export function countIn1D(array) {\n  return array.reduce((counts, value) => {\n    if (counts[value] === undefined) {\n      counts[value] = 1;\n    } else {\n      counts[value]++;\n    }\n    return counts;\n  }, {});\n}\n\nexport function countIn2D(rows) {\n  return rows.reduce((counts, values) => {\n    values.forEach(value => {\n      if (counts[value] === undefined) {\n        counts[value] = 1;\n      } else {\n        counts[value]++;\n      }\n    });\n    return counts;\n  }, {});\n}\n\n/*\nTakes in a flattened one dimensional array\nrepresenting two-dimensional pixel values\nand returns an array of arrays.\n*/\nexport function unflatten(valuesInOneDimension, size) {\n  const {height, width} = size;\n  const valuesInTwoDimensions = [];\n  for (let y = 0; y < height; y++) {\n    const start = y * width;\n    const end = start + width;\n    valuesInTwoDimensions.push(valuesInOneDimension.slice(start, end));\n  }\n  return valuesInTwoDimensions;\n}\n","import {fromArrayBuffer, fromUrl, fromBlob} from 'geotiff';\nimport {getPalette} from 'geotiff-palette';\nimport {unflatten} from './utils.js';\n\nexport function processResult(result, debug) {\n  const noDataValue = result.noDataValue;\n  const height = result.height;\n  const width = result.width;\n\n  return new Promise((resolve, reject) => {\n    result.maxs = [];\n    result.mins = [];\n    result.ranges = [];\n\n    let max; let min;\n\n    // console.log(\"starting to get min, max and ranges\");\n    for (let rasterIndex = 0; rasterIndex < result.numberOfRasters; rasterIndex++) {\n      const rows = result.values[rasterIndex];\n      if (debug) console.log('[georaster] rows:', rows);\n\n      for (let rowIndex = 0; rowIndex < height; rowIndex++) {\n        const row = rows[rowIndex];\n\n        for (let columnIndex = 0; columnIndex < width; columnIndex++) {\n          const value = row[columnIndex];\n          if (value != noDataValue && !isNaN(value)) {\n            if (typeof min === 'undefined' || value < min) min = value;\n            else if (typeof max === 'undefined' || value > max) max = value;\n          }\n        }\n      }\n\n      result.maxs.push(max);\n      result.mins.push(min);\n      result.ranges.push(max - min);\n    }\n\n    resolve(result);\n  });\n}\n\n/* We're not using async because trying to avoid dependency on babel's polyfill\nThere can be conflicts when GeoRaster is used in another project that is also\nusing @babel/polyfill */\nexport default function parseData(data, debug) {\n  return new Promise((resolve, reject) => {\n    try {\n      if (debug) console.log('starting parseData with', data);\n      if (debug) console.log('\\tGeoTIFF:', typeof GeoTIFF);\n\n      const result = {};\n\n      let height, width;\n\n      if (data.rasterType === 'object') {\n        result.values = data.data;\n        result.height = height = data.metadata.height || result.values[0].length;\n        result.width = width = data.metadata.width || result.values[0][0].length;\n        result.pixelHeight = data.metadata.pixelHeight;\n        result.pixelWidth = data.metadata.pixelWidth;\n        result.projection = data.metadata.projection;\n        result.xmin = data.metadata.xmin;\n        result.ymax = data.metadata.ymax;\n        result.noDataValue = data.metadata.noDataValue;\n        result.numberOfRasters = result.values.length;\n        result.xmax = result.xmin + result.width * result.pixelWidth;\n        result.ymin = result.ymax - result.height * result.pixelHeight;\n        result._data = null;\n        resolve(processResult(result));\n      } else if (data.rasterType === 'geotiff') {\n        result._data = data.data;\n\n        let initFunction = fromArrayBuffer;\n        if (data.sourceType === 'url') {\n          initFunction = fromUrl;\n        } else if (data.sourceType === 'Blob') {\n          initFunction = fromBlob;\n        }\n\n        if (debug) console.log('data.rasterType is geotiff');\n        resolve(initFunction(data.data).then(geotiff => {\n          if (debug) console.log('geotiff:', geotiff);\n          return geotiff.getImage().then(image => {\n            try {\n              if (debug) console.log('image:', image);\n\n              const fileDirectory = image.fileDirectory;\n\n              const {\n                GeographicTypeGeoKey,\n                ProjectedCSTypeGeoKey,\n              } = image.getGeoKeys();\n\n              result.projection = ProjectedCSTypeGeoKey || GeographicTypeGeoKey;\n              if (debug) console.log('projection:', result.projection);\n\n              result.height = height = image.getHeight();\n              if (debug) console.log('result.height:', result.height);\n              result.width = width = image.getWidth();\n              if (debug) console.log('result.width:', result.width);\n\n              const [resolutionX, resolutionY] = image.getResolution();\n              result.pixelHeight = Math.abs(resolutionY);\n              result.pixelWidth = Math.abs(resolutionX);\n\n              const [originX, originY] = image.getOrigin();\n              result.xmin = originX;\n              result.xmax = result.xmin + width * result.pixelWidth;\n              result.ymax = originY;\n              result.ymin = result.ymax - height * result.pixelHeight;\n\n              result.noDataValue = fileDirectory.GDAL_NODATA ? parseFloat(fileDirectory.GDAL_NODATA) : null;\n\n              result.numberOfRasters = fileDirectory.SamplesPerPixel;\n\n              if (fileDirectory.ColorMap) {\n                result.palette = getPalette(image);\n              }\n\n              if (data.sourceType !== 'url') {\n                return image.readRasters().then(rasters => {\n                  result.values = rasters.map(valuesInOneDimension => {\n                    return unflatten(valuesInOneDimension, {height, width});\n                  });\n                  return processResult(result);\n                });\n              } else {\n                return result;\n              }\n            } catch (error) {\n              reject(error);\n              console.error('[georaster] error parsing georaster:', error);\n            }\n          });\n        }));\n      }\n    } catch (error) {\n      reject(error);\n      console.error('[georaster] error parsing georaster:', error);\n    }\n  });\n}\n","'use strict';\n/* global Blob */\n/* global URL */\n\nimport Worker from 'web-worker:./worker.js';\nimport parseData from './parseData.js';\nimport {unflatten} from './utils.js';\nimport {fromUrl, fromUrls} from 'geotiff';\nimport toCanvas from 'georaster-to-canvas';\n\nfunction urlExists(url) {\n  try {\n    return fetch(url, {method: 'HEAD'})\n        .then(response => response.status === 200)\n        .catch(error => false);\n  } catch (error) {\n    return Promise.resolve(false);\n  }\n}\n\nfunction getValues(geotiff, options) {\n  const {left, top, right, bottom, width, height, resampleMethod} = options;\n  // note this.image and this.geotiff both have a readRasters method;\n  // they are not the same thing. use this.geotiff for experimental version\n  // that reads from best overview\n  return geotiff.readRasters({\n    window: [left, top, right, bottom],\n    width: width,\n    height: height,\n    resampleMethod: resampleMethod || 'bilinear',\n  }).then(rasters => {\n    /*\n      The result appears to be an array with a width and height property set.\n      We only need the values, assuming the user remembers the width and height.\n      Ex: [[0,27723,...11025,12924], width: 10, height: 10]\n    */\n    return rasters.map(raster => unflatten(raster, {height, width}));\n  });\n};\n\n\nclass GeoRaster {\n  constructor(data, metadata, debug) {\n    if (debug) console.log('starting GeoRaster.constructor with', data, metadata);\n\n    this._web_worker_is_available = typeof window !== 'undefined' && window.Worker !== 'undefined';\n    this._blob_is_available = typeof Blob !== 'undefined';\n    this._url_is_available = typeof URL !== 'undefined';\n\n    // check if should convert to buffer\n    if (typeof data === 'object' && data.constructor && data.constructor.name === 'Buffer' && Buffer.isBuffer(data) === false) {\n      data = new Buffer(data);\n    }\n\n    if (typeof data === 'string') {\n      if (debug) console.log('data is a url');\n      this._data = data;\n      this._url = data;\n      this.rasterType = 'geotiff';\n      this.sourceType = 'url';\n    } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n      this._data = data;\n      this.rasterType = 'geotiff';\n      this.sourceType = 'Blob';\n    } else if (typeof Buffer !== 'undefined' && Buffer.isBuffer(data)) {\n      // this is node\n      if (debug) console.log('data is a buffer');\n      this._data = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n      this.rasterType = 'geotiff';\n      this.sourceType = 'Buffer';\n    } else if (data instanceof ArrayBuffer) {\n      // this is browser\n      this._data = data;\n      this.rasterType = 'geotiff';\n      this.sourceType = 'ArrayBuffer';\n    } else if (Array.isArray(data) && metadata) {\n      this._data = data;\n      this.rasterType = 'object';\n      this._metadata = metadata;\n    }\n\n    if (debug) console.log('this after construction:', this);\n  }\n\n  preinitialize(debug) {\n    if (debug) console.log('starting preinitialize');\n    if (this._url) {\n      // initialize these outside worker to avoid weird worker error\n      // I don't see how cache option is passed through with fromUrl,\n      // though constantinius says it should work: https://github.com/geotiffjs/geotiff.js/issues/61\n      const ovrURL = this._url + '.ovr';\n      return urlExists(ovrURL).then(ovrExists => {\n        if (debug) console.log('overview exists:', ovrExists);\n        if (ovrExists) {\n          return fromUrls(this._url, [ovrURL], {cache: true, forceXHR: false});\n        } else {\n          return fromUrl(this._url, {cache: true, forceXHR: false});\n        }\n      });\n    } else {\n      // no pre-initialization steps required if not using a Cloud Optimized GeoTIFF\n      return Promise.resolve();\n    }\n  }\n\n  initialize(debug) {\n    return this.preinitialize(debug).then(geotiff => {\n      return new Promise((resolve, reject) => {\n        if (debug) console.log('starting GeoRaster.initialize');\n        if (debug) console.log('this', this);\n\n        if (this.rasterType === 'object' || this.rasterType === 'geotiff' || this.rasterType === 'tiff') {\n          if (this._web_worker_is_available) {\n            const worker = new Worker();\n            worker.onmessage = (e) => {\n              if (debug) console.log('main thread received message:', e);\n              const data = e.data;\n              for (const key in data) {\n                this[key] = data[key];\n              }\n              if (this._url) {\n                this._geotiff = geotiff;\n                this.getValues = function(options) {\n                  return getValues(this._geotiff, options);\n                };\n              }\n              this.toCanvas = function(options) {\n                return toCanvas(this, options);\n              };\n              resolve(this);\n            };\n            if (debug) console.log('about to postMessage');\n            if (this._data instanceof ArrayBuffer) {\n              worker.postMessage({\n                data: this._data,\n                rasterType: this.rasterType,\n                sourceType: this.sourceType,\n                metadata: this._metadata,\n              }, [this._data]);\n            } else {\n              worker.postMessage({\n                data: this._data,\n                rasterType: this.rasterType,\n                sourceType: this.sourceType,\n                metadata: this._metadata,\n              });\n            }\n          } else {\n            if (debug) console.log('web worker is not available');\n            parseData({\n              data: this._data,\n              rasterType: this.rasterType,\n              sourceType: this.sourceType,\n              metadata: this._metadata,\n            }, debug).then(result => {\n              if (debug) console.log('result:', result);\n              if (this._url) {\n                result._geotiff = geotiff;\n                result.getValues = function(options) {\n                  return getValues(this._geotiff, options);\n                };\n              }\n              result.toCanvas = function(options) {\n                return toCanvas(this, options);\n              };\n              resolve(result);\n            }).catch(reject);\n          }\n        } else {\n          reject('couldn\\'t find a way to parse');\n        }\n      });\n    });\n  }\n}\n\nexport const parseGeoraster = (input, metadata, debug) => {\n  if (debug) console.log('starting parseGeoraster with ', input, metadata);\n\n  if (input === undefined) {\n    const errorMessage = '[Georaster.parseGeoraster] Error. You passed in undefined to parseGeoraster. We can\\'t make a raster out of nothing!';\n    throw Error(errorMessage);\n  }\n\n  return new GeoRaster(input, metadata, debug).initialize(debug);\n};\n"],"names":["Worker"],"mappings":"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"}